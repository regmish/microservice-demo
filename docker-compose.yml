version: "3.0"

networks:
  docker-internal:

services:
  rabbitmq:
    hostname: rabbitmq
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    restart: on-failure
    expose: 
      - 5672
    ports: 
      - 15672:15672 # Management UI
      # - 5672:5672 #AMQP
    volumes:
      - ./.rabbitmq/etc:/etc/rabbitmq/
      - ./.rabbitmq/data:/var/lib/rabbitmq/
      - ./.rabbitmq/logs:/var/log/rabbitmq/
    networks:
      - docker-internal
  
  mongodb:
    hostname: mongodb
    container_name: mongodb
    image: mongo:4.2
    restart: on-failure
    expose:
      - 27017
    ports:
      - 27020:27017
    volumes:
      - ./.mongo/data:/data/db
      - ./.mongo/logs:/var/log/mongodb
      - ./.mongo/init/:/docker-entrypoint-initdb.d/
    networks:
      - docker-internal
  
  users:
    hostname: users
    container_name: users
    build:
      context: ./users
    restart: on-failure
    ports:
      - 3030:3030
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=users
      - PORT=3030
    volumes:
      - ./users:/app/
      - /app/node_modules
    depends_on:
    - mongodb
    networks:
      - docker-internal

  apartments:
    hostname: apartments
    container_name: apartments
    build:
      context: ./apartments
    restart: on-failure
    ports:
      - 3040:3040
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=apartments
      - PORT=3040
    volumes:
      - ./apartments:/app/
      - /app/node_modules
    command: npm start
    depends_on:
    - mongodb
    networks:
      - docker-internal

  app:
    hostname: app
    container_name: app
    build:
      context: ./app
    restart: on-failure
    ports:
      - 3000:3000
    environment:
      - REACT_APP_USERS_API=3030
    volumes:
      - ./app:/app/
      - /app/node_modules
    networks:
      - docker-internal
    